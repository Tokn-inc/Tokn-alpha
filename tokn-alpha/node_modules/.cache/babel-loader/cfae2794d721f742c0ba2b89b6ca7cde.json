{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjrab\\\\OneDrive\\\\Desktop\\\\Tokndev\\\\Tokn-alpha\\\\tokn-alpha\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Web3 from 'web3';\nimport NFTSContractInstance from './contracts_build/NFTSContract.json';\nimport MVPManagerInstance from './contracts_build/MVPManager.json';\nimport background from './background.jpg';\nimport ComingSoon from \"./Components/ComingSoon.jsx\";\nimport Input from \"./Components/Input.jsx\";\nimport Login from \"./Components/Login.jsx\";\nimport CreateAccount from \"./Components/CreateAccount.jsx\";\nimport BuyNow from \"./Components/BuyNow.jsx\";\nimport Congrats from \"./Components/Congrats.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || 'http://localhost:8080');\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId(); // Load DaiToken\n\n    const nftsContractData = NFTSContractInstance.networks[networkId];\n\n    if (nftsContractData) {\n      const nftsContractInstance = new web3.eth.Contract(NFTSContractInstance.abi, nftsContractData.address);\n      this.setState({\n        nftsContractInstance\n      });\n    } else {\n      window.alert('NFT contract not deployed to detected network.');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: background,\n        className: \"background\",\n        alt: \"background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: () => /*#__PURE__*/_jsxDEV(ComingSoon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/input\",\n          exact: true,\n          component: () => /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          component: () => /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create-account\",\n          exact: true,\n          component: () => /*#__PURE__*/_jsxDEV(CreateAccount, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/buy-now\",\n          exact: true,\n          component: () => /*#__PURE__*/_jsxDEV(BuyNow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/congrats\",\n          exact: true,\n          component: () => /*#__PURE__*/_jsxDEV(Congrats, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jjrab/OneDrive/Desktop/Tokndev/Tokn-alpha/tokn-alpha/src/App.js"],"names":["React","Component","Route","Switch","Web3","NFTSContractInstance","MVPManagerInstance","background","ComingSoon","Input","Login","CreateAccount","BuyNow","Congrats","App","componentWillMount","loadWeb3","loadBlockchainData","loadWeb","window","ethereum","web3","enable","currentProvider","alert","givenProvider","accounts","eth","getAccounts","setState","account","networkId","net","getId","nftsContractData","networks","nftsContractInstance","Contract","abi","address","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Route, Switch } from \"react-router-dom\";\nimport Web3 from 'web3'\nimport NFTSContractInstance from './contracts_build/NFTSContract.json'\nimport MVPManagerInstance from './contracts_build/MVPManager.json'\nimport background from './background.jpg';\nimport ComingSoon from \"./Components/ComingSoon.jsx\"\nimport Input from \"./Components/Input.jsx\"\nimport Login from \"./Components/Login.jsx\"\nimport CreateAccount from \"./Components/CreateAccount.jsx\"\nimport BuyNow from \"./Components/BuyNow.jsx\"\nimport Congrats from \"./Components/Congrats.jsx\"\n\nclass App extends Component {\n\n  async componentWillMount() {\n      await this.loadWeb3()\n      await this.loadBlockchainData()\n    }\n\n  async loadWeb(){\n\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n  async loadBlockchainData(){\n    const web3 = new Web3(Web3.givenProvider || 'http://localhost:8080')\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId()\n\n    // Load DaiToken\n    const nftsContractData = NFTSContractInstance.networks[networkId]\n    if(nftsContractData) {\n      const nftsContractInstance = new web3.eth.Contract(NFTSContractInstance.abi, nftsContractData.address)\n      this.setState({ nftsContractInstance })\n    } else {\n      window.alert('NFT contract not deployed to detected network.')\n    }\n  }\n\n\nrender(){\n  return (\n    <div className=\"App\">\n        <img src={background} className=\"background\" alt=\"background\" />\n        <Switch>\n          <Route path=\"/\" exact component={() => <ComingSoon />} />\n          <Route path=\"/input\" exact component={() => <Input />} />\n          <Route path=\"/login\" exact component={() => <Login />} />\n          <Route path=\"/create-account\" exact component={() => <CreateAccount />} />\n          <Route path=\"/buy-now\" exact component={() => <BuyNow />} />\n          <Route path=\"/congrats\" exact component={() => <Congrats />} />\n        </Switch>\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}